syntax="proto3";

package pb;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option go_package="pb/user";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: { title: "User API" description: "User management API" version: "v1.0" }
};


message TestRequest {
    string name = 1;
}

message TestResponse {
    string message = 1;
}
 
service UserService {

 rpc Test(TestRequest) returns (TestResponse) {
        option (google.api.http) = {
            post: "/v1/test"
            body: "*"
        };
    }
    
// 用户注册
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v1/user/register"
      body: "*"
    };
    option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["User"]
      summary: "User registration"
      description: "User registration"
    };

  }

// 用户登录
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
        post: "/v1/user/login"
        body: "*"
        };
        option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        tags: ["User"]
        summary: "User login"
        description: "User login"
        };
    }

// 更新用户信息
     rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UpdateUserProfileResponse) {
        option (google.api.http) = {
            put: "/v1/users/{user_id}"
            body: "*"
        };
        option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["User"]
            summary: "Update user information"
            description: "Update user information"
        };
    }

// 获取用户信息
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {
        option (google.api.http) = {
            get: "/v1/users/{user_id}"
        };
        option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["User"]
            summary: "Get user information"
            description: "Get user information"
        };
       
    }

// 修改密码
    rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse) {
        option (google.api.http) = {
            put: "/v1/users/change_password"
            body: "*"
        };
        option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["User"]
            summary: "Change password"
            description: "Change password"
        };
       
    }

// 重置密码（管理员）
    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {
        option (google.api.http) = {
            post: "/v1/users/reset_password"
            body: "*"
        };
        option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["User"]
            summary: "Reset password"
            description: "Reset password"
        };
        
    }

// 获取用户列表（管理员）
    rpc ListUser(ListUserRequest) returns (ListUserResponse) {
        option (google.api.http) = {
            get: "/v1/users"
        };
        option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["User"]
            summary: "Get user list"
            description: "Get user list"
        };
       
    }

// 删除用户（管理员）
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
        option (google.api.http) = {
            delete: "/v1/users/{user_id}"
        };
        option(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            tags: ["User"]
            summary: "Delete user"
            description: "Delete user"
        };
       
    }


}

// 用户角色
enum Role {
    // 管理员
    ADMIN = 0;
    // 普通用户
    USER = 1;
}

// 用户状态
enum Status {
    // 正常
    NORMAL = 0;
    // 禁用
    DISABLED = 1;
}

// 用户信息
message User {
    // 用户ID
    string user_id = 1;
    // 用户名
    string username = 2;
    // 邮箱
    string email = 3;
    // 手机号
    string phone = 4;
    // 用户角色
    Role role = 5;
    // 用户状态
    Status status = 6;
    // 创建时间
    string created_at = 7;
    // 更新时间
    string updated_at = 8;
}

// 用户注册请求（或者·叫用户新增请求，只有管理员才有权限）
message RegisterRequest {
    // 用户名
    string username = 1;
    // 密码
    string password = 2;
    // 用户角色
    Role role = 3;

}

// 用户注册响应
message RegisterResponse {
    // 用户信息
    User user = 1;
}

// 用户登录请求
message LoginRequest {
    // 用户名
    string username = 1;
    // 密码
    string password = 2;
}

// 用户登录响应
message LoginResponse {
    // 用户信息
    User user = 1;
    // token
    string token = 2;
}

// 更新用户信息请求
message UpdateUserProfileRequest {
    // 用户ID
     string user_id = 1;
    // 用户名
    string username = 2;
    // 邮箱
    string email = 3;
    // 手机号
    string phone = 4;
}

// 更新用户信息响应
message UpdateUserProfileResponse {
    // 用户信息
    User user = 1;
}

// 获取用户信息请求
message GetUserRequest {
    // 用户ID
    string user_id = 1;
}

// 获取用户信息响应
message GetUserResponse {
    // 用户信息
    User user = 1;
}

// 修改密码请求

message ChangePasswordRequest {
    // 用户ID
    string user_id = 1;
    // 旧密码
    string old_password = 2;
    // 新密码
    string new_password = 3;
}

// 修改密码响应
message ChangePasswordResponse {
    // 用户信息
    User user = 1;
}

// 重置密码请求
message ResetPasswordRequest {
    // 用户ID
    string user_id = 1;
    // 新密码
    string new_password = 2;
}

// 重置密码响应
message ResetPasswordResponse {
    // 用户信息
    User user = 1;
}

// 获取用户列表请求(管理员)
message ListUserRequest {
    
    // 页码
    int32 page = 1;
    // 每页数量
    int32 page_size = 2;
}

// 获取用户列表响应
message ListUserResponse {
    // 用户列表
    repeated User users = 1;
    // 总数
    int32 total = 2;
}

// 删除用户请求
message DeleteUserRequest {
    // 用户ID
    string user_id = 1;
}

// 删除用户响应
message DeleteUserResponse {
    // 用户信息
    User user = 1;
}




